<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.proj.eataewon.dao.BbsDao">

    <select id="getBbsList" resultType="com.proj.eataewon.dto.BbsDto">
        SELECT SEQ, ID, TITLE, CONTENT, HASHTAG, WDATE, SHOPNAME, ADDRESS, READCNT, LIKECNT
        FROM EATAEWONBBS
     <!--   ORDER BY READCNT DESC-->
    </select>

    <insert id="writeBbs" parameterType="com.proj.eataewon.dto.BbsDto">
        INSERT INTO EATAEWONBBS
        (SEQ, ID, TITLE, CONTENT,PICTURE, HASHTAG, WDATE, SHOPNAME,
        ADDRESS, LATITUDE, LONGTITUDE, READCNT,LIKECNT,shopphnum,shopurl)
        VALUES
        (bbsseq.NEXTVAL, #{id}, #{title}, #{content}, #{picture}, #{hashtag}, SYSDATE,
        #{shopname}, #{address}, #{latitude},#{longtitude}, 0,0,#{shopphnum},#{shopurl})
    </insert>

    <!--picture string인 테이블 따로 만들어 test중-->
    <insert id="bbswriteImgup" parameterType="com.proj.eataewon.dto.BbsFileDto">
        INSERT INTO eataewonBbsfile
        (ID,SEQ,TITLE,CONTENT,FILENAME,FILEPATH,HASHTAG,WDATE,SHOPNAME,ADDRESS,LATITUDE,LONGTITUDE,READCNT,LIKECNT)
        VALUES
        ( #{id}, picSeq.NEXTVAL, #{title}, #{content}, #{filename}, 'test.txt', #{hashtag}, SYSDATE,
        #{shopname}, #{address}, #{latitude},#{longtitude}, 0,0)
    </insert>


    <!-- 글 상세페이지 보기 -->
    <select id="getBbs" parameterType="java.lang.Integer" resultType="com.proj.eataewon.dto.BbsDto">
        SELECT SEQ, ID, TITLE, CONTENT, PICTURE, HASHTAG ,WDATE, SHOPNAME, ADDRESS, READCNT, LIKECNT,shopphnum,shopurl
        FROM EATAEWONBBS
        WHERE SEQ=#{seq}
    </select>

    <!-- 조회수 업데이트 -->
    <update id="readcount" parameterType="java.lang.Integer">
        UPDATE EATAEWONBBS
        SET READCNT=READCNT+1
        WHERE SEQ=#{seq}
    </update>


    <!-- 검색 조건이 틀려도 에러가 안나오도록 where 1=1-->
    <select id="getBbsListSearch" parameterType="com.proj.eataewon.dto.BbsParam" resultType="com.proj.eataewon.dto.BbsDto">
        SELECT SEQ, ID, TITLE, CONTENT, HASHTAG, WDATE, SHOPNAME, ADDRESS, READCNT
        FROM EATAEWONBBS
        WHERE 1=1
        <if test="choice !=null and choice !='' and search !=null and search !=''">
            <if test="choice=='id'">
                AND ID=#{search}
            </if>
            <if test="choice=='title'">
                AND TITLE LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='content'">
                AND CONTENT LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='hashtag'">
                AND HASHTAG LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='address'">
                AND ADDRESS LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='shopname'">
                AND SHOPNAME LIKE '%'||#{search}||'%'
            </if>
        </if>
  <!--      ORDER BY READCNT DESC-->
    </select>


    <!--ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC)란 뜻은
REF를 내림차순 STEP을 오름차순으로 정렬 한다는 말 그 뒤에 ROW_NUMBER()을 통해서 순번을 차례로 매긴다.
검색해서 나온 결과에 차례로 순번 매긴다고 생각하면 된다.  -->
    <select id="getBbsListSearchPage" parameterType="com.proj.eataewon.dto.BbsParam"
            resultType="com.proj.eataewon.dto.BbsDto">
        SELECT	ID, SEQ, TITLE, CONTENT ,HASHTAG, WDATE, ADDRESS, READCNT
        FROM
            (SELECT ROW_NUMBER()OVER(ORDER BY READCNT DESC) AS RNUM,
        	ID, SEQ, TITLE, CONTENT ,HASHTAG, WDATE, ADDRESS, READCNT
        FROM EATAEWONBBS
        WHERE 1=1
        <if test="choice !=null and choice !='' and search !=null and search !=''">
            <if test="choice=='id'">
                AND ID=#{search}
            </if>
            <if test="choice=='title'">
                AND TITLE LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='content'">
                AND CONTENT LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='hashtag'">
                AND HASHTAG LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='address'">
                AND ADDRESS LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='shopname'">
                AND SHOPNAME LIKE '%'||#{search}||'%'
            </if>
        </if>
        ORDER BY READCNT DESC)
        WHERE RNUM BETWEEN ${start} AND ${end}
    </select>


    <!-- 글의 총수 -->
    <select id="getBbsCount" parameterType="com.proj.eataewon.dto.BbsParam" resultType="java.lang.Integer">
        SELECT NVL(COUNT(*),0) AS CNT
        FROM EATAEWONBBS
        WHERE 1=1
        <if test="choice != null and choice != '' and search != null and search != '' ">
            <if test="choice=='id'">
                AND ID=#{search}
            </if>
            <if test="choice=='title'">
                AND TITLE LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='content'">
                AND CONTENT LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='hashtag'">
                AND HASHTAG LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='address'">
                AND ADDRESS LIKE '%'||#{search}||'%'
            </if>
            <if test="choice=='shopname'">
                AND SHOPNAME LIKE '%'||#{search}||'%'
            </if>
        </if>
    </select>

    <!-- 글 수정 -->
    <update id="updateBbs" parameterType="com.proj.eataewon.dto.BbsDto">
        UPDATE EATAEWONBBS
        SET TITLE=#{title}, SHOPNAME=#{shopname},CONTENT=#{content}, PICTURE=#{picture}, HASHTAG=#{hashtag},
        LATITUDE=#{latitude}, LONGTITUDE=#{longtitude},ADDRESS=#{address}, shopphnum=#{shopphnum}, shopurl=#{shopurl}
        WHERE SEQ=#{seq}
    </update>

    <!-- 글 삭제 -->
    <update id="deleteBbs" parameterType="java.lang.Integer">
        DELETE FROM EATAEWONBBS
        WHERE SEQ=#{seq}
    </update>


    <!--게시물 스크랩하기-->
    <insert id="bbsScrap" parameterType="com.proj.eataewon.dto.ScrapDto">
        Insert into EATAEWONSCRAP
        (id,BBSSEQ,SEQ)
        values(#{id},#{bbsseq},scrapSeq.NEXTVAL)
    </insert>


    <!--스크랩된 게시물 리스트 반환-->
    <select id = "scrapBbsList" resultType="com.proj.eataewon.dto.BbsDto">
        SELECT TITLE, HASHTAG, SHOPNAME, ADDRESS, b.SEQ
          FROM EATAEWONSCRAP s , EATAEWONBBS b
         WHERE s.bbsseq = b.seq
           AND s.ID = #{id}
    </select>


    <select id = "scrapBbsCnt" parameterType="com.proj.eataewon.dto.ScrapDto"  resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT
        FROM EATAEWONSCRAP
        WHERE bbsseq = #{bbsseq}
        AND ID = #{id}
    </select>


    <!--스크랩된 게시물 취소-->
    <!--eataewonscrap에 eataewonbbs의 primarykey를 참조하는 외래키를 참조하는 조건때문에
    스크랩된 게시물은 삭제가 안됐습니다. 스크랩 여부에 상관없이 글을 삭제할수 있도록 EATAEWONLIKE의 외래키 조건 삭제했습니다.-->
    <update id="deleteScarp" parameterType="java.lang.Integer">
        DELETE FROM EATAEWONSCRAP
        WHERE BBSSEQ=#{bbsseq}
    </update>

    <!--게시물 좋아요하기/ 부모키 없다는 오류 때문에 자료가 삽입이 안돼서서 일단 EATAEWONLIKE의 외래키 조건 삭제했습니다.-->
    <!--참고 사이트 : https://blog.naver.com/PostView.nhn?blogId=cksgy32&logNo=221675954355&parentCategoryNo=&categoryNo=78&viewDate=&isShowPopularPosts=true&from=search-->
    <insert id="likeBbs" parameterType="com.proj.eataewon.dto.LikeDto">
        insert into EATAEWONLIKE
        (id,BBSSEQ,SEQ)
        values(#{id},#{bbsseq},likeSeq.NEXTVAL)
    </insert>


    <!--좋아요된 게시물 리스트 반환-->
    <select id = "likeBbsList" resultType="com.proj.eataewon.dto.BbsDto">
        SELECT TITLE, HASHTAG, SHOPNAME, ADDRESS, b.SEQ
        FROM EATAEWONLIKE l ,EATAEWONBBS b
        WHERE l.bbsseq = b.seq
        AND l.ID=#{id}
    </select>

    <select id = "likebbsCnt" parameterType="com.proj.eataewon.dto.LikeDto"  resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT
          FROM EATAEWONLIKE
        WHERE bbsseq = #{bbsseq}
        AND ID = #{id}
    </select>

    <!--좋아요 할때 likecnt 증가 / 중복 방지는 controller에서 -->
    <update id="likecntUpdate" parameterType="com.proj.eataewon.dto.LikeDto" >
        update EATAEWONBBS
        SET likecnt = likecnt+1
        WHERE seq = #{bbsseq}
    </update>

    <!--좋아요 취소할때 likecnt 감소 -->
    <update id="likecntDown" parameterType="com.proj.eataewon.dto.LikeDto" >
        update EATAEWONBBS
        SET likecnt = likecnt-1
        WHERE seq = #{bbsseq}
    </update>

    <!--좋아요된 게시물 취소-->
    <update id="deleteLike" parameterType="com.proj.eataewon.dto.LikeDto">
        DELETE FROM EATAEWONLike
         WHERE BBSSEQ=#{bbsseq}
           AND ID = #{id}
    </update>








</mapper>